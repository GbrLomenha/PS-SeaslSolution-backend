datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model Navio {
	ID_navio Int @id @default(autoincrement())
	NO_navio String
	URL_img_navio String
	ID_img_cloudinary String
	DS_bandeira String
	DT_criacao DateTime @default(now())
	DT_atualizacao DateTime @updatedAt()

    duvs DUV[]
}

model Pessoa {
	ID_pessoa Int @id @default(autoincrement())
	NO_pessoa String
	DS_nacionalidade String
	URL_foto_pessoa String
	ID_img_cloudinary String
	DT_criacao DateTime @default(now())
	DT_atualizacao DateTime @updatedAt()
	passageiro Passageiro?
	tripulante Tripulante?

	DUVs DUV[] @relation("DUV_Pessoa")
}

model Passageiro {
	ID_passageiro Int @id @default(autoincrement())
	ID_pessoa Int @unique
	pessoa Pessoa @relation(fields: [ID_pessoa], references: [ID_pessoa], onDelete: Cascade)
}

model Tripulante {
	ID_tripulante Int @id @default(autoincrement())
	DS_sid String
	ID_pessoa Int @unique
	pessoa Pessoa @relation(fields: [ID_pessoa], references: [ID_pessoa], onDelete: Cascade)
}

model DUV{
	ID_duv Int @id @default(autoincrement())
	NU_duv String
	DT_viagem DateTime
	DT_criacao DateTime @default(now())
	DT_atualizacao DateTime @updatedAt()

	pessoas Pessoa[] @relation("DUV_Pessoa")
	ID_navio Int
	navio Navio @relation(fields: [ID_navio], references: [ID_navio])
}